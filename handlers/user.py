
import asyncio

from aiogram.dispatcher import FSMContext
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters.state import StatesGroup
from aiogram.dispatcher.filters.state import State, StatesGroup

from create_bot import dp, bot
from aiogram.dispatcher.filters import Text
from key.buttons import main_menu, stop_menu
from random import random, randrange, randint


class FSMChat(StatesGroup):
    thing = State()


async def cm_start(message: types.Message):
    await bot.send_message(message.from_user.id, 'ü§î–ß—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏')
    await FSMChat.thing.set()


async def search_thing(message: types.Message, state: FSMChat):
    text = message.text
    user_id = message.from_user.id

    if text=="‚ùå—Å—Ç–æ–ø":
        await state.finish()
        await bot.send_message(user_id, "üòä–ë—É–¥—É —Ä–∞–¥ –µ—Å–ª–∏ –≤–∞–º –ø–æ–º–æ–≥.")
        await bot.send_message(user_id, "üéä üéâ–ß—Ç–æ –±—ã –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏–Ω—Ç–µ –∫–Ω–æ–ø–∫—É 'üîç –ò—Å–∫–∞—Ç—å'", reply_markup=main_menu)
    else:
        await bot.send_message(user_id, "–ù–µ–º–Ω–æ–∂–∫–æ –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòâ")
        ls_product = randint(0, 1000)
        places_product = randint(0, 1000)
        id_product = randint(10000, 1000000)
        generated_text = f"‚úî‚ò∫{text} \n(–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ ) - {id_product} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ {ls_product} –Ω–∞—Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∞ {places_product} –º–µ—Å—Ç–µ."
        await bot.send_message(user_id, generated_text)
        await bot.send_message(user_id, "–ß—Ç–æ —Ç–æ –µ—â–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏. –ï—Å–ª–∏ –≤—ã —É–∂–µ –Ω–∞—à–ª–∏ —Ç–æ —á—Ç–æ –∏—á–∫–∞–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '‚ùå—Å—Ç–æ–ø'", reply_markup=stop_menu)


def register_user(dp : Dispatcher):
    dp.register_message_handler(cm_start, Text(equals='üîç –ò—Å–∫–∞—Ç—å', ignore_case=True))
    dp.register_message_handler(search_thing, state=FSMChat.thing)